import abi from"./abi.js";const heliumInuContract="0x799059f1b6BA7B85500e70c6d14230cEAb4B14F8",rewardSender="0x9fd58398e60071834506de2482e7d5f68401e769",divider=Math.pow(10,4),divider18=Math.pow(10,18);

let contract,rewardContract,web3;

const currency=function(t,a="BUSD"){return t.toLocaleString("en-US").concat(` ${a}`)},

getContract=async()=>{contract=new web3.eth.Contract(abi,heliumInuContract),rewardContract=new web3.eth.Contract(abi,rewardSender)};

export const getWeb3=()=>(web3=new Web3("https://bsc-dataseed1.ninicoin.io/"),web3.eth.handleRevert=!0,web3);

export const getBabyCasperBal=async t=>(void 0===contract&&await getContract(),await contract.methods.balanceOf(t).call()/divider);

export const getRewards=async t=>{const a=await getBabyCasperBal(t);void 0===rewardContract&&await getContract();   
const e=await rewardContract.methods.shares(t).call();
return{balance:currency(a,""),paid:currency(e.totalRealised/divider18),unpaid:currency(await rewardContract.methods.getUnpaidEarnings(t).call()/divider18)}};

export const getTotalRewards=async()=>{void 0===rewardContract&&await getContract();   
const t=await rewardContract.methods.totalDividends.call().call()/divider18,a=await rewardContract.methods.totalDistributed.call().call()/divider18;
return{totalRewards:currency(t),totalPaid:currency(a),totalUpcoming:currency(t-a)}};